class Container:
    def __init__(self, nomor, tujuan):
        self.nomor = nomor
        self.tujuan = tujuan
        self.status = "belum diproses"  
        self.next = None
        self.prev = None
    
    def set_status(self, status):
        if status not in ["belum diproses", "sedang diproses", "sudah diproses"]:
            print("Status tidak valid!")
            return
        self.status = status

# MENU PROGRAM
def main():
    while True:
        print("\nPilih tipe antrean:")
        print("1. Single Linked List")
        print("2. Doubly Linked List")
        print("3. Circular Linked List")
        print("4. Keluar")
        choice = input("Masukkan pilihan: ")
        
        if choice == '1':
            queue = SingleLinkedList()
        elif choice == '2':
            queue = DoublyLinkedList()
        elif choice == '3':
            queue = CircularLinkedList()
        elif choice == '4':
            break
        else:
            print("Pilihan tidak valid!")
            continue
        
        while True:
            print("\nMenu:")
            print("1. Tambah Kontainer")
            print("2. Hapus Kontainer")
            print("3. Tampilkan Antrean Maju")
            print("4. Tampilkan Antrean Mundur (khusus Doubly Linked List)")
            print("5. Panjang Antrean")
            print("6. Update Status Kontainer")
            print("7. Kembali ke menu utama")
            sub_choice = input("Masukkan pilihan: ")
            
            if sub_choice == '1':
                nomor = input("Masukkan nomor kontainer: ")
                tujuan = input("Masukkan tujuan pengiriman: ")
                # Validasi: Nomor kontainer harus mengandung huruf atau kombinasi huruf & angka, tidak boleh hanya angka negatif
                if nomor.isdigit() and nomor.startswith('-'):
                    print("Nomor kontainer tidak boleh angka negatif!")
                elif not any(char.isalpha() for char in nomor):  
                    print("Nomor kontainer harus mengandung setidaknya satu huruf!")
                elif not tujuan.isalpha():
                    print("Tujuan pengiriman hanya boleh mengandung huruf!")
                else:
                    queue.enqueue(nomor, tujuan)
            elif sub_choice == '2':
                nomor = input("Masukkan nomor kontainer untuk dihapus (biarkan kosong untuk hapus yang pertama): ")
                # Memastikan nomor kontainer tidak negatif dan hanya berisi angka
                if nomor and (not nomor.isdigit() or nomor.startswith('-')):
                    print("Nomor kontainer harus berupa angka positif!")
                else:
                    queue.dequeue(nomor if nomor else None)
            elif sub_choice == '3':
                if isinstance(queue, DoublyLinkedList):
                    queue.display_forward()
                else:
                    queue.display()
          
            elif sub_choice == '4' and isinstance(queue, DoublyLinkedList):
                queue.display_backward()
            elif sub_choice == '5':
                print(f"Panjang antrean: {queue.length()}")
            elif sub_choice == '6':
                nomor = input("Masukkan nomor kontainer untuk update status: ")
                status = input("Masukkan status baru (belum diproses, sedang diproses, sudah diproses): ")
                # Update status kontainer
                temp = queue.head
                while temp:
                    if temp.nomor == nomor:
                        temp.set_status(status)
                        print(f"Status kontainer {nomor} diubah menjadi {status}.")
                        break
                    temp = temp.next
                else:
                    print(f"Kontainer dengan nomor {nomor} tidak ditemukan!")
            elif sub_choice == '7':
                break
            else:
                print("Pilihan tidak valid atau fitur tidak tersedia untuk tipe antrean ini!")